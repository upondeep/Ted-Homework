/**
 * Created by XD on 2016-12-19.
 */
"use strict";
var oldData = [
        {
            "firstName": "Tom",
            "lastName": "Zhang",
            "ext": "1001",
            "cell": "416-000-0000",
            "alt": "",
            "title": "Manager",
            "email": "tomz@jsrocks.com",
        },
        {
            "firstName": "Peter",
            "lastName": "Wang",
            "ext": "1003",
            "cell": "647-222-2222",
            "alt": "416-333-3333",
            "title": "QA",
            "email": "peterw@jsrocks.com",
        }
    ], newData = [
//{
//    "firstName": "Tom",
//    "lastName": "Zhang",
//    "ext": "1001",
//    "cell": "416-000-0000",
//    "alt": "",
//    "title": "Manager",
//    "email": "tomz@jsrocks.com",
//},
        {
            "firstName": "Peter",
            "lastName": "Wang",
            "ext": "1003",
            "cell": "647-222-2222",
            "alt": "416-333-3344",
            "title": "QA",
            "email": "peterw@jsrocks.com",
        },
        {
            "firstName": "Ted",
            "lastName": "Tong",
            "ext": "6666",
            "cell": "416-432-5343",
            "alt": "",
            "title": "Grand Master",
            "email": "upondeep@hotmail.com",
        },
        {
            "firstName": "Jerry",
            "lastName": "Mice",
            "ext": "1002",
            "cell": "647-476-4532",
            "alt": "",
            "title": "The Mouse",
            "email": "jerrym@jsrocks.com",
        }
    ],
    result;

/*
 * compare if two objects have same value
 */
function objSameValue(a, b) {
    var aProps = Object.getOwnPropertyNames(a),
        bProps = Object.getOwnPropertyNames(b);

    if (aProps.length != bProps.length) {
        return false;
    }

    for (var i = 0; i < aProps.length; i++) {
        var propName = aProps[i];
        if (a[propName] !== b[propName]) {
            return false;
        }
    }
    return true;
}


/*
 * split search
 */
function splitSearch(array,low,high,target) {
    while ((high-low) > -1) {
        var mid = Math.ceil((low + high) / 2);
        if (target.email.localeCompare(array[mid].email)>0) {
            return splitSearch(array, mid+1, high, target);
        } else if(target.email.localeCompare(array[mid].email)<0){
            return splitSearch(array, low, mid-1, target);
        }
        else {
            return mid;
        }
    }
    return -1;
}

/*
 * main function for comparing arrays
 */
function compare(oldData, newData) {
    var result = {'added': [], 'deleted': [], 'modified': []},
    //make a copy of data
        od = oldData.slice(), nd = newData.slice();

    //sort old data by email
    od.sort(function (a, b) {
        return a.email.localeCompare(b.email);
    });

    //loop through new data
    nd.forEach(function (data) {
        var exist = false,
            index = splitSearch(od, 0, od.length - 1, data);
        if (index > -1) {
            //check modified
            if (!objSameValue(data, od[index])) {
                result.modified.push({'oldData': od[index], 'newData': data});
            }
            od.splice(index, 1);
            exist = true;
        }
        //check added
        if (!exist) {
            result.added.push(data);
        }
    });
    //the rest of od is deleted
    result.deleted = od;
    return result;
}

result = compare(oldData, newData);

console.log(result);
